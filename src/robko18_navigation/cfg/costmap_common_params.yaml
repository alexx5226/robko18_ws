obstacle_range: 2.5
raytrace_range: 3.0
#footprint: [[x0, y0], [x1, y1], ... [xn, yn]]
#robot_radius: ir_of_robot
robot_radius: 0.275 # distance a circular robot should be clear of the obstacle
# inflation_radius: 3.0
inflation_radius: 1.0
cost_scaling_factor: 5
#  added trying out:
#  cost_scaling_factor:  5.0  # exponential rate at which the obstacle cost drops off (default: 10)

#footprint: [[x0, y0], [x1, y1], ... [xn, yn]]
#robot_radius: ir_of_robot
# robot_radius: 0.47 # distance a circular robot should be clear of the obstacle

# https://answers.ros.org/question/186951/robot-clearance-from-walls/
# Changing the robot's footprint may change the minimum allowed distance. 
# If you want to allow your robot to go closer, but prefer it to move farther, 
# I would increase the inflation_radius and play with the cost_scaling_factor.???


observation_sources: laser_scan_sensor #point_cloud_sensor

# marking - add obstacle information to cost map
# clearing - clear obstacle information to cost map
laser_scan_sensor: {sensor_frame: hokuyo, data_type: LaserScan, topic: /robko18/laser/scan, marking: true, clearing: true}

#point_cloud_sensor: {sensor_frame: frame_name, data_type: PointCloud, topic: topic_name, marking: true, clearing: true}
