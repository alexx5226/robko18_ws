<launch>


  <!-- Launch Gazebo  -->
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

    <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find robko18_description)/urdf/cprmover4_standalone_sim.urdf.xacro'"/>
    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model cprmover4 -param robot_description"/> 


 
  <!-- ros_control seven dof arm launch file -->
  <rosparam file="$(find robko18_gazebo)/cfg/cprmover4_gazebo_joint_states.yaml" command="load"/>

  <node name="joint_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
		output="screen" ns="/cprmover4" args="joint_state_controller" />

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
	respawn="false" output="screen">
    <remap from="/joint_states" to="/cprmover4/joint_states" />
  </node>
  <!-- ros_control position control dof arm launch file -->
    <!-- Load joint controller configurations from YAML file to parameter server -->
  <!--<rosparam file="$(find robko18_gazebo)/cfg/cprmover4_gazebo_joint_position.yaml" command="load"/>-->


  <!--<rosparam file="$(find robko18_gazebo)/cfg/cprmover4_gazebo_control.yaml" command="load"/>-->

  <!-- load the controllers -->
   <!--<node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
	    output="screen" ns="/cprmover4" args="
                                    Joint0_controller
                                    Joint1_controller
					  	                      Joint2_controller
					                          Joint3_controller
					                          Gripper1_controller
					                          Gripper2_controller"/>-->


   <!-- ros_control trajectory control dof arm launch file -->
	<rosparam file="$(find robko18_gazebo)/cfg/cprmover4_trajectory_control.yaml" command="load"/>
  <node name="cprmover4_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/cprmover4" args="joint_controller"/> 	
  <!-- moveit launch file -->
  <include file="$(find cprmover4_moveit_config)/launch/cprmover4_planning_execution.launch" /> 

</launch>
